// <auto-generated />
using DeadByDaylight.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeadByDaylight.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250722164817_Inicio")]
    partial class Inicio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DeadByDaylight.Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("DeadByDaylight.Domain.Entities.Personaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Altura")
                        .HasColumnType("double");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RadioTerror")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<double>("VelocidadMovimiento")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Personajes");
                });

            modelBuilder.Entity("DeadByDaylight.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DeadByDaylight.Domain.Entities.Ventaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Ventajas");
                });

            modelBuilder.Entity("DeadByDaylight.Domain.Entities.VentajaCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("VentajaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("VentajaId");

                    b.ToTable("VentajasCategorias");
                });

            modelBuilder.Entity("DeadByDaylight.Domain.Entities.Personaje", b =>
                {
                    b.HasOne("DeadByDaylight.Domain.Entities.Rol", "Rol")
                        .WithMany("Personajes")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("DeadByDaylight.Domain.Entities.Ventaja", b =>
                {
                    b.HasOne("DeadByDaylight.Domain.Entities.Rol", "Rol")
                        .WithMany("Ventajas")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("DeadByDaylight.Domain.Entities.VentajaCategoria", b =>
                {
                    b.HasOne("DeadByDaylight.Domain.Entities.Categoria", "Categoria")
                        .WithMany("VentajasCategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeadByDaylight.Domain.Entities.Ventaja", "Ventaja")
                        .WithMany("VentajasCategorias")
                        .HasForeignKey("VentajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Ventaja");
                });

            modelBuilder.Entity("DeadByDaylight.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("VentajasCategorias");
                });

            modelBuilder.Entity("DeadByDaylight.Domain.Entities.Rol", b =>
                {
                    b.Navigation("Personajes");

                    b.Navigation("Ventajas");
                });

            modelBuilder.Entity("DeadByDaylight.Domain.Entities.Ventaja", b =>
                {
                    b.Navigation("VentajasCategorias");
                });
#pragma warning restore 612, 618
        }
    }
}
